long long int PowMod(long long int x,long long int n,long long int M)
		{
		    if(n==0) return 1;
		    
		    if(n%2==0) // n is even
		    {
		        long long int temp=PowMod(x,n/2,M);
		        return (temp*temp)%M;
		        
		    }
		   
		        return ((x%M)*PowMod(x,n-1,M))%M;
		    
		}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

int solve(int a,int n)
{
    int ans=1;
    
    while(n>0)
    {
        if((n&1)!=0)
        {
            ans=ans*a;
        }
        
        a=a*a;
        n=n>>1;
    }
    
    
    return ans;
    
}

int main() {
      
      // Fast exponentiation - calculating a^n;
      
      int a,n; cin>>a>>n;
      
      int ans=solve(a,n);
      
      cout<<ans<<endl;



    return 0;
}
