class Solution {
public:
    int divide(int dividend, int divisor) {
        
         // handling corner cases
         if(dividend==INT_MIN and divisor==-1) return INT_MAX;
         if(dividend==INT_MIN and divisor==1) return INT_MIN;

         // converting divisor and dividend to their +ve values
         long long dd=abs(dividend);
         long long dv=abs(divisor);

         // result variables
         int ans=0;

         while(dv<=dd)
         {
             long long mul=dv;
             long long temp=1;

             while(mul<=dd-mul)
             {
                 mul=2*mul;
                 temp=2*temp;
             }

             ans+=temp;
             dd-=mul;
         }

    // if either dividend or divisor is -ve then our ans will be -ve

    if((dividend<0 and divisor>0) or (dividend>0 and divisor<0))
    {
        return -ans;
    }

    return ans;


    }
};
