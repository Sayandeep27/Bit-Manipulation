#include <iostream>
using namespace std;

unsigned int toggleBitsInRange(unsigned int n, int left, int right) {
    // Create a mask to toggle bits in the range left to right
    unsigned int toggleMask = (1 << (right + 1)) - (1 << left); // All 1s from left to right
    unsigned int fullMask = ~(0); // All 1s for full 32-bit unsigned int
    unsigned int mask = toggleMask & fullMask; // Combine toggle and full mask
    
    // Toggle bits in the range using bitwise XOR
    return n ^ mask;
}

int main() {
    unsigned int n = 255;   // Example number (binary: 11111111)
    int left = 5, right = 2; // Range from bit position 5 to bit position 2

    cout << "Original number: " << n << endl;
    unsigned int toggled = toggleBitsInRange(n, left, right);
    cout << "Number after toggling bits from position " << left << " to " << right << ": " << toggled << endl;

    return 0;
}
